pipeline {
 agent {
     node {
         label 'master'
     }
 }
 tools {

     maven 'maven3.6'
     jdk 'java'
 }

environment {
    registry = vaasuchavva/devops_project
    registrycredential = 'docker_hub_access'
    dockerImage = ''
}

stages {
    stage ('Checkout code from SCM'){
     steps{   

         git branch: 'master', url: 'https://github.com/vaasuchavva/addressbook.git/'

      }
    }
    stage ('Cleaning'){
        steps{
            sh """
            mvn clean
            """
        }

    }

    stage ('Code Compile'){
        steps{
            sh """
            mvn compile
            """
        }

    }
    
     stage ('Run unit test'){
        steps{
            sh """
            mvn test
            """
        }

    }
    stage ('Packaging '){
        steps{
            sh """
            mvn package
            """
        }

    }
    
    stage ('Preupload'){
        steps{
            sh  """
            cp /var/lib/jenkins/workspace/Demo/target/addressbook-2.0.war .
            zip addressbook_demo.zip addressbook-2.0.war
            """
        }
    }
    
    stage ('Nexus Upload'){
        steps{
	script {
              nexusArtifactUploader( \
                 nexusVersion: 'nexus3', \
                 protocol: 'http', \
                 nexusUrl: 'localhost:8081', \
                 groupId: 'addressbook', \
                 version: '1.0', \
                 repository: 'devops_demo_artifactory', \
                 credentialsId: 'nexus3_access', \
                 artifacts: [ \
                         [artifactId: 'addressbook', \
                         type: 'zip', \
						                   classifier: '', \
                         file: 'addressbook_demo.zip' \
                         ] \
                 ] \
            );
        }
    }
  }

  stage('Build docker Image') {
     steps{
	/*
   	sh """
	docker build --nocache -t vaasuchavva/devops_project:addressbook-2.0 .
	docker push vaasuchavva/devops_project:addressbook-2.0  
	docker run -d -p 8082:8080 --name addressbook vaasuchavva/devops_project:addressbook-2.0
        """
	*/

	script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        } 
    } 
  }
  
  stage('Push Deployable Image') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
  }

    stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $registry:$BUILD_NUMBER"
      }
    }

}
}
